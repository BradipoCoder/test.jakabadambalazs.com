<?php

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\training_calendar\Oauth2\TokenManager;
use Drupal\user\Entity\User;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\TempStore\PrivateTempStoreFactory;
use Drupal\Core\TempStore\PrivateTempStore;

/**
 * @param string $route_name
 * @param \Drupal\Core\Routing\RouteMatchInterface $route_match
 *
 * @return string
 */
function training_calendar_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.training_calendar':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Training Calendar for runners...') . '</p>';
      return $output;

    default:
      return NULL;
  }
}

/**
 * @param array $page
 */
function training_calendar_page_attachments_alter(array &$page) {
  if (!\Drupal::currentUser()->hasPermission('tc_access')) {
    return;
  }

  //@todo: check if we are on the correct url

  //@this is for basic auth - let's implement oauth2
  $username = "AAA";
  $password = "BBB";
  $usrPwd = $username . ':' . $password;
  $userhash = base64_encode($usrPwd);
  $page['#attached']['drupalSettings']['training_calendar']['userhash'] = $userhash;
}

/**
 * Implements hook_theme().
 *
 * create one for each theme (twig file)
 */
function training_calendar_theme() {
  return [
    'training_calendar_calendar' => [
      'variables' => [
        'content' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_user_login()
 *
 * @param User $account
 */
function training_calendar_user_login(User $account) {
  /** @var TokenManager $tm */
  $tm = \Drupal::service('training_calendar.oauth2.token_manager');

  try {
    $tm->authenticate();
  } catch(\Exception $e) {
    \Drupal::logger('training_calendar')
      ->critical(
        'Authentication error: @message',
        ['@message' => $e->getMessage()]
      );
  }
}
